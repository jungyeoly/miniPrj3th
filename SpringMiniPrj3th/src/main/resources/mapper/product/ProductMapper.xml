<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myapp.product.dao.IProductRepository">

	<select id="selectAllProduct" parameterType="int" resultType="com.example.myapp.product.model.Product">
		SELECT
			p.product_id AS productId,
			c.category_id AS categoryId,
			category_name AS categoryName,
			product_name AS productName,
			product_price AS productPrice,
			product_description AS productDescription,
			product_state AS productState,
			product_stock AS productStock,
			product_date AS productDate,
			image_name AS imageName,
			image_data AS imageData,
			image_id AS imageId,
			image_type AS imageType,
			image_size AS imageSize
		FROM
			product p
		LEFT JOIN
			category c
		ON p.category_id = c.category_id
		LEFT JOIN
			product_image pi
		ON p.product_id = pi.product_id
		<if test='categoryId != -1'>
			WHERE p.category_id = #{categoryId}
		</if>		
	</select>
	
	<insert id="insertCategory" parameterType="String">
		INSERT INTO category
		VALUES (category_seq.nextval, #{categoryName})
	</insert>
	
	<select id="selectAllCategory" resultType="com.example.myapp.product.model.Category">
		SELECT
			category_id AS categoryId,
			category_name AS categoryName
		FROM
			category
	</select> 
	
	<delete id="deleteCategory" parameterType="int">
		DELETE FROM category
		WHERE category_id = #{categoryId}
	</delete>
	
	<insert id="insertProduct" parameterType="com.example.myapp.product.model.UploadProduct">
		INSERT INTO product
		VALUES 
		(product_seq.nextval, #{product.categoryId}, #{product.productName}, #{product.productPrice}, #{product.productDescription}, 0, #{product.productStock}, sysdate)
	</insert>
	
	<select id="selectProductId" resultType="int">
		SELECT 
			LAST_NUMBER-1 AS productId 
		FROM 
			user_sequences 
		WHERE sequence_name = 'PRODUCT_SEQ'
	</select>
	
	<insert id="insertProductImg">
		INSERT INTO product_image
		VALUES
		(product_image_seq.nextval, #{img.imageName}, #{img.imageSize}, #{img.imageType}, #{img.imageData}, #{productId})
	</insert>

	<select id="getFile" parameterType="int" resultType="com.example.myapp.product.model.UploadImage">
		<![CDATA[
			SELECT
				image_id AS imageId,
				image_name AS imageName,
				image_size AS imageSize,
				image_type AS imageType,
				image_data AS imageData,
				product_id AS productId
			FROM product_image
			WHERE image_id = #{imageId}
		]]>
	</select>
	
	<update id="deleteProduct" parameterType="int">
		<![CDATA[
			UPDATE product SET product_state = 1
			WHERE product_id = #{productId}
		]]>
	</update>
	
	<update id="deleteBackProduct" parameterType="int">
		<![CDATA[
			UPDATE product SET product_state = 0
			WHERE product_id = #{productId}
		]]>
	</update>
	
	<select id="selectProduct" parameterType="int" resultType="com.example.myapp.product.model.Product">
		<![CDATA[
			SELECT
				p.product_id AS productId,
				category_name AS categoryName,
				product_name AS productName,
				product_price AS productPrice,
				product_description AS productDescription,
				product_state AS productState,
				product_stock AS productStock,
				product_date AS productDate,
				image_name AS imageName,
				image_data AS imageData,
				image_id AS imageId,
				image_type AS imageType,
				image_size AS imageSize
			FROM
				product p	
			LEFT JOIN
				category c
			ON p.category_id = c.category_id
			LEFT JOIN
				product_image pi
			ON p.product_id = pi.product_id
			WHERE p.product_id = #{productId}
		]]>
	</select>
	
	<update id="updateProduct" parameterType="com.example.myapp.product.model.UploadProduct">
		<![CDATA[
			UPDATE product
			SET category_id = #{product.categoryId},
				product_name = #{product.productName},
				product_price = #{product.productPrice},	
				product_description = #{product.productDescription},
				product_stock = #{product.productStock}
			WHERE product_id = #{product.productId}
		]]>
	</update>
	
	<update id="updateProductImg">
		<![CDATA[
			UPDATE product_image
			SET image_name = #{img.imageName},
				image_size = #{img.imageSize},
				image_type = #{img.imageType},
				image_data = #{img.imageData}
			WHERE product_id = #{productId}
		]]>
	</update>
	
</mapper>