<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myapp.product.dao.IProductRepository">

	<select id="selectAllProduct" parameterType="int" resultType="com.example.myapp.product.model.Product">
		SELECT
			p.product_id AS productId,
			category_name AS categoryName,
			product_name AS productName,
			product_price AS productPrice,
			product_description AS productDescription,
			product_stock AS productStock,
			product_date AS productDate,
			product_state AS productState,
			image_name AS imageName,
			image_data AS imageData,
			image_id AS imageId,
			image_type AS imageType,
			image_size AS imageSize
		FROM
			product p
		LEFT JOIN
			category c
		ON p.category_id = c.category_id
		LEFT JOIN
			product_image pi
		ON p.product_id = pi.product_id
		<if test='categoryId != -1'>
			WHERE p.category_id = #{categoryId}
		</if>		
	</select>
	
	<select id="selectPagingProduct" parameterType="int" resultType="com.example.myapp.product.model.Product">
		SELECT pp.product_name AS productName, 
				pp.product_price AS productPrice, 
				pp.category_id AS categoryId, 
			    pp.product_id AS productId,
			    pp.product_state AS productState,
			    pp.ravg AS avgRate,
			   	pi.image_id AS imageId,
			    pi.image_name AS imageName, 
			    pi.image_size AS imageSize, 
			    pi.image_type AS imageType, 
			    pi.image_data AS imageData
			    FROM(
					SELECT product_id, product_name, product_price, product_state ,category_id, NVL(ravg,0) as ravg, rownum as rnum
					FROM(
					SELECT p.product_id, p.product_name, p.product_price, p.product_state, p.category_id, round(avg(r.rate),0) as ravg 
						FROM product p left join review r on p.product_id = r.product_id
						WHERE p.product_state = 0
						GROUP BY p.product_id, p.product_name, p.product_price, p.product_state ,p.category_id
						)
						<if test='categoryId != -1'>
							WHERE category_id = #{categoryId}
						</if>
					)
					pp LEFT JOIN product_image pi on pp.product_id = pi.product_id 
					WHERE rnum BETWEEN #{start} AND #{end}
				
	</select>
	
	<select id="selectRateOrderProduct" resultType="com.example.myapp.product.model.Product">
	<![CDATA[
			SELECT pp.product_name AS productName, 
				   pp.product_price AS productPrice, 
				   pp.category_id AS categoryId, 
			       pp.product_id AS productId,
			       pp.product_state AS productState,
			       pp.ravg AS avgRate,
			   	   pi.image_id AS imageId,
			       pi.image_name AS imageName, 
			       pi.image_size AS imageSize, 
			       pi.image_type AS imageType, 
			       pi.image_data AS imageData
			       FROM(
					SELECT product_id, product_name, product_price, product_state ,category_id, ravg, rownum as rnum
					FROM(
					SELECT p.product_id, p.product_name, p.product_price, p.product_state, p.category_id, NVL(round(avg(r.rate),0),0) as ravg 
						FROM product p left join review r on p.product_id = r.product_id
						WHERE p.product_state = 0
						GROUP BY p.product_id, p.product_name, p.product_price, p.product_state ,p.category_id ORDER BY ravg desc
						)
					)
					pp LEFT JOIN product_image pi on pp.product_id = pi.product_id 
					WHERE rnum BETWEEN #{start} AND #{end} 
					ORDER BY rnum
	]]>
	</select>
	
	<select id="selectPriceOrderProduct" resultType="com.example.myapp.product.model.Product">
	<![CDATA[
		SELECT pp.product_name AS productName, 
        	pp.product_price AS productPrice, 
        	pp.category_id AS categoryId, 
        	pp.product_id AS productId,
            pp.ravg AS avgRate,
        	pi.image_id AS imageId,
        	pi.image_name AS imageName, 
        	pi.image_size AS imageSize, 
        	pi.image_type AS imageType, 
        	pi.image_data AS imageData FROM
			(SELECT product_id, product_name, product_price, category_id, NVL(ravg,0) as ravg ,rownum as rnum FROM 
				(SELECT p.product_id, p.product_name, p.product_price, p.category_id, round(avg(r.rate),0) as ravg from product p
                       LEFT JOIN review r on p.product_id = r.product_id 
                       WHERE p.product_state = 0
                       GROUP BY p.product_id, p.product_name, p.product_price, p.category_id 
                       ORDER BY p.product_price desc
                 )
            ) pp
			LEFT JOIN product_image pi on pp.product_id = pi.product_id 
			WHERE rnum BETWEEN #{start} AND #{end} ORDER BY rnum
	]]>
	</select>
	
	<select id="selectCountUseProduct" parameterType="int" resultType="int">
		SELECT count(*)
		FROM product
		WHERE product_state = 0
		<if test='categoryId != -1'>
		AND category_id = #{categoryId}
		</if>	
	</select>
	
	<select id="checkCategory" parameterType="String" resultType="int">
		SELECT count(*)
		FROM category
		WHERE category_name = #{categoryName}
	</select>
	
	<insert id="insertCategory" parameterType="String">
		INSERT INTO category
		VALUES (category_seq.nextval, #{categoryName})
	</insert>
	
	<select id="selectAllCategory" resultType="com.example.myapp.product.model.Category">
		SELECT
			category_id AS categoryId,
			category_name AS categoryName
		FROM
			category
	</select> 
	
	<delete id="deleteCategory" parameterType="int">
		DELETE FROM category
		WHERE category_id = #{categoryId}
	</delete>
	
	<insert id="insertProduct" parameterType="com.example.myapp.product.model.UploadProduct">
		INSERT INTO product
		VALUES 
		(product_seq.nextval, #{product.categoryId}, #{product.productName}, #{product.productPrice}, #{product.productDescription}, 0, #{product.productStock}, sysdate)
	</insert>
	
	<select id="selectProductId" resultType="int">
		SELECT 
			LAST_NUMBER-1 AS productId 
		FROM 
			user_sequences 
		WHERE sequence_name = 'PRODUCT_SEQ'
	</select>
	
	<insert id="insertProductImg">
		INSERT INTO product_image
		VALUES
		(product_image_seq.nextval, #{img.imageName}, #{img.imageSize}, #{img.imageType}, #{img.imageData}, #{productId})
	</insert>

	<select id="getFile" parameterType="int" resultType="com.example.myapp.product.model.UploadImage">
		<![CDATA[
			SELECT
				image_id AS imageId,
				image_name AS imageName,
				image_size AS imageSize,
				image_type AS imageType,
				image_data AS imageData,
				product_id AS productId
			FROM product_image
			WHERE image_id = #{imageId}
		]]>
	</select>
	
	<update id="deleteProduct" parameterType="int">
		<![CDATA[
			UPDATE product SET product_state = 1
			WHERE product_id = #{productId}
		]]>
	</update>
	
	<update id="deleteBackProduct" parameterType="int">
		<![CDATA[
			UPDATE product SET product_state = 0
			WHERE product_id = #{productId}
		]]>
	</update>
	
	<select id="selectProduct" parameterType="int" resultType="com.example.myapp.product.model.Product">
		<![CDATA[
			SELECT
				p.product_id AS productId,
				category_name AS categoryName,
				product_name AS productName,
				product_price AS productPrice,
				product_description AS productDescription,
				product_state AS productState,
				product_stock AS productStock,
				product_date AS productDate,
				image_name AS imageName,
				image_data AS imageData,
				image_id AS imageId,
				image_type AS imageType,
				image_size AS imageSize
			FROM
				product p	
			LEFT JOIN
				category c
			ON p.category_id = c.category_id
			LEFT JOIN
				product_image pi
			ON p.product_id = pi.product_id
			WHERE p.product_id = #{productId}
		]]>
	</select>
	
	<update id="updateProduct" parameterType="com.example.myapp.product.model.UploadProduct">
		<![CDATA[
			UPDATE product
			SET category_id = #{product.categoryId},
				product_name = #{product.productName},
				product_price = #{product.productPrice},	
				product_description = #{product.productDescription},
				product_stock = #{product.productStock}
			WHERE product_id = #{product.productId}
		]]>
	</update>
	
	<update id="updateProductImg">
		<![CDATA[
			UPDATE product_image
			SET image_name = #{img.imageName},
				image_size = #{img.imageSize},
				image_type = #{img.imageType},
				image_data = #{img.imageData}
			WHERE product_id = #{productId}
		]]>
	</update>
	
	<select id="selectCountCategory" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM category
		]]>
	</select>
	
 	<select id="selectPagingCategory" parameterType="int" resultType="com.example.myapp.product.model.Category">
 		<![CDATA[
		SELECT x2.category_id as categoryId,
		x2.category_name as categoryName FROM (
		SELECT rownum r, x.*  FROM (SELECT c.* FROM category c ORDER BY c.category_id) x) x2
		WHERE r > #{min} and r <= #{max}
		]]>
	</select> 
	
</mapper>